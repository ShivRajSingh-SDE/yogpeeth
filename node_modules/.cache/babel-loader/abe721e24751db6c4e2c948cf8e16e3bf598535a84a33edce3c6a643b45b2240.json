{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar defaultTimestep = 1 / 60 * 1000;\nvar getCurrentTime = typeof performance !== \"undefined\" ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nvar onNextFrame = typeof window !== \"undefined\" ? function (callback) {\n  return window.requestAnimationFrame(callback);\n} : function (callback) {\n  return setTimeout(function () {\n    return callback(getCurrentTime());\n  }, defaultTimestep);\n};\nfunction createRenderStep(runNextFrame) {\n  var toRun = [];\n  var toRunNextFrame = [];\n  var numToRun = 0;\n  var isProcessing = false;\n  var flushNextFrame = false;\n  var toKeepAlive = new WeakSet();\n  var step = {\n    schedule: function schedule(callback) {\n      var keepAlive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var addToCurrentFrame = immediate && isProcessing;\n      var buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n      if (keepAlive) toKeepAlive.add(callback);\n      if (buffer.indexOf(callback) === -1) {\n        buffer.push(callback);\n        if (addToCurrentFrame && isProcessing) numToRun = toRun.length;\n      }\n      return callback;\n    },\n    cancel: function cancel(callback) {\n      var index = toRunNextFrame.indexOf(callback);\n      if (index !== -1) toRunNextFrame.splice(index, 1);\n      toKeepAlive.delete(callback);\n    },\n    process: function process(frameData) {\n      if (isProcessing) {\n        flushNextFrame = true;\n        return;\n      }\n      isProcessing = true;\n      var _ref = [toRunNextFrame, toRun];\n      toRun = _ref[0];\n      toRunNextFrame = _ref[1];\n      toRunNextFrame.length = 0;\n      numToRun = toRun.length;\n      if (numToRun) {\n        for (var i = 0; i < numToRun; i++) {\n          var callback = toRun[i];\n          callback(frameData);\n          if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n          }\n        }\n      }\n      isProcessing = false;\n      if (flushNextFrame) {\n        flushNextFrame = false;\n        step.process(frameData);\n      }\n    }\n  };\n  return step;\n}\nvar maxElapsed = 40;\nvar useDefaultElapsed = true;\nvar runNextFrame = false;\nvar isProcessing = false;\nvar frame = {\n  delta: 0,\n  timestamp: 0\n};\nvar stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nvar steps = stepsOrder.reduce(function (acc, key) {\n  acc[key] = createRenderStep(function () {\n    return runNextFrame = true;\n  });\n  return acc;\n}, {});\nvar sync = stepsOrder.reduce(function (acc, key) {\n  var step = steps[key];\n  acc[key] = function (process) {\n    var keepAlive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!runNextFrame) startLoop();\n    return step.schedule(process, keepAlive, immediate);\n  };\n  return acc;\n}, {});\nvar cancelSync = stepsOrder.reduce(function (acc, key) {\n  acc[key] = steps[key].cancel;\n  return acc;\n}, {});\nvar flushSync = stepsOrder.reduce(function (acc, key) {\n  acc[key] = function () {\n    return steps[key].process(frame);\n  };\n  return acc;\n}, {});\nvar processStep = function processStep(stepId) {\n  return steps[stepId].process(frame);\n};\nvar processFrame = function processFrame(timestamp) {\n  runNextFrame = false;\n  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n  frame.timestamp = timestamp;\n  isProcessing = true;\n  stepsOrder.forEach(processStep);\n  isProcessing = false;\n  if (runNextFrame) {\n    useDefaultElapsed = false;\n    onNextFrame(processFrame);\n  }\n};\nvar startLoop = function startLoop() {\n  runNextFrame = true;\n  useDefaultElapsed = true;\n  if (!isProcessing) onNextFrame(processFrame);\n};\nvar getFrameData = function getFrameData() {\n  return frame;\n};\nexports.cancelSync = cancelSync;\nexports.default = sync;\nexports.flushSync = flushSync;\nexports.getFrameData = getFrameData;","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","arguments","length","undefined","immediate","addToCurrentFrame","buffer","add","indexOf","push","cancel","index","splice","delete","process","frameData","_ref","i","has","maxElapsed","useDefaultElapsed","frame","delta","timestamp","stepsOrder","steps","reduce","acc","key","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","getFrameData","default"],"sources":["C:/Users/shivr/Downloads/project_resume/app/node_modules/framesync/dist/framesync.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nfunction createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexports.cancelSync = cancelSync;\nexports.default = sync;\nexports.flushSync = flushSync;\nexports.getFrameData = getFrameData;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}